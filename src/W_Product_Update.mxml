<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="1000" height="700" creationComplete="pageLoad()">
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
		<!--		<mx:RemoteObject id="service" destination="ChanelService"
		result="agent_resultHandler(event)"
		fault="agent_faultHandler(event)">
		</mx:RemoteObject>-->
		
		<mx:RemoteObject id="service" destination="ProductService" fault="{agent_faultHandler(event);}">
			<mx:method name="Update" result="{btnClose_clickHandler();}"/>
			<mx:method name="Create" result="{btnClose_clickHandler();}"/>
		</mx:RemoteObject>
		
		<mx:RemoteObject id="chanelService" destination="ChanelService" fault="{agent_faultHandler(event);}">
			<mx:method name="Read" result="{ShowChanelData(event);}"/>
		</mx:RemoteObject>
		
		<mx:RemoteObject id="shippingService" destination="ShippingService" fault="{agent_faultHandler(event);}">
			<mx:method name="Read" result="{ShowShippingData(event);}"/>
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import Shipping.Shipping;
			
			import User.UserInfo;
			
			protected function pageLoad():void{
				chanelService.Read();
				shippingService.Read();
				
				var wproduct:W_Product= this.owner as W_Product;
				var selectedProduct:ProductVO = wproduct.productData.selectedItem as ProductVO;
				
				this.productName.text = selectedProduct.name;
				this.productCode.text=selectedProduct.code;
				this.weight.text= selectedProduct.weightInfo;
				if(selectedProduct.isInStock=="1"){
					this.inStock1.selected = true
				}else{
					this.inStock2.selected = true
				}
				
				var priceInfo:PriceInfo=selectedProduct.price;
				this.price1.text=priceInfo.price1;
				this.price2.text=priceInfo.price2;
				this.price3.text=priceInfo.price3;
				this.price4.text=priceInfo.price4;
				this.price5.text=priceInfo.price5;
				
				var descripe1:CommentInfo= selectedProduct.descripe1;
			    this.des.text=descripe1.chInfo;
				var descripe2:CommentInfo= selectedProduct.descripe2;
				this.des1.text=descripe2.chInfo; 
				var descripe3:CommentInfo= selectedProduct.descripe3;
				this.des2.text=descripe3.chInfo; 
				var descripe4:CommentInfo= selectedProduct.descripe4;
				this.des3.text =descripe4.chInfo;
				
				this.imageView.text=selectedProduct.imageView;
				
				var imagesStr:String="";
				for(var j:int=0;j<selectedProduct.images.length;j++){
					var imageInfo:String = selectedProduct.images.getItemAt(j) as String;
					imagesStr = imagesStr +imageInfo;
					if(j!=selectedProduct.images.length-1){
						imagesStr = imagesStr + ";";
					}
				}
				this.images.text=imagesStr;
			}
			
			protected function ShowChanelData(event:ResultEvent):void
			{
				var col:ArrayCollection= event.result  as ArrayCollection;
				this.chanelId.dataProvider =col;
				
				var wproduct:W_Product= this.owner as W_Product;
				var selectedProduct:ProductVO = wproduct.productData.selectedItem as ProductVO;
				
				for(var i:int=0;i<col.length;i++){
					var chanel:ChanelVO= this.chanelId.dataProvider.getItemAt(i) as ChanelVO;
					if(chanel.id==selectedProduct.chanelId){
						this.chanelId.selectedIndex=i;
						return;
					}
				}
			}
			
			protected function ShowShippingData(event:ResultEvent):void
			{
				var col:ArrayCollection = event.result as ArrayCollection;
				this.shippingId.dataProvider = col;
				
				var wproduct:W_Product= this.owner as W_Product;
				var selectedProduct:ProductVO = wproduct.productData.selectedItem as ProductVO;
				
				for(var i:int=0;i<col.length;i++){
					var shipping:Shipping= col.getItemAt(i) as Shipping;
					if(shipping.id==selectedProduct.shippingCode){
						this.shippingId.selectedIndex=i;
						return;
					}
				}
				
			}
			
			protected function agent_faultHandler(event:FaultEvent):void
			{
				Alert.show("失败信:"+event.message.toString());
			}
			
			protected function btnClose_clickHandler():void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function btnCreate_clickHandler():void
			{
				var productDo:ProductVO=new ProductVO();
				
				var wproduct:W_Product= this.owner as W_Product;
				var selecteProduct:ProductVO = wproduct.productData.selectedItem as ProductVO;
				
				productDo.id = selecteProduct.id;
				var selectedChanel:ChanelVO =this.chanelId.selectedItem; 
				productDo.chanelId = selectedChanel.id;
				
				productDo.code=this.productCode.text;
				
				productDo.name= this.productName.text;
				
				var descripe1:CommentInfo= new CommentInfo();
				descripe1.chInfo= this.des.text
				var descripe2:CommentInfo= new CommentInfo();
				descripe2.chInfo= this.des1.text
				var descripe3:CommentInfo= new CommentInfo();
				descripe3.chInfo= this.des2.text
				var descripe4:CommentInfo= new CommentInfo();
				descripe4.chInfo= this.des3.text
				productDo.descripe1=descripe1
				productDo.descripe2=descripe2
				productDo.descripe3=descripe3
				productDo.descripe4=descripe4
				
				var priceInfo:PriceInfo=new PriceInfo();
				priceInfo.price1= this.price1.text;
				productDo.price = priceInfo;
				
				productDo.imageView= this.imageView.text;
				
				var arr:Array=this.images.text.split(";");
				var imagesArr:ArrayCollection=new ArrayCollection(arr);
				productDo.images = imagesArr;
				
				service.Update(productDo);
			}
			
			protected function btnCreate2_clickHandler():void
			{
				var productDo:ProductVO=new ProductVO();
				
				var selectedChanel:ChanelVO =this.chanelId.selectedItem; 
				productDo.chanelId = selectedChanel.id;
				
				productDo.code=this.productCode.text;
				
				productDo.name= this.productName.text;
				
				var descripe1:CommentInfo= new CommentInfo();
				descripe1.chInfo= this.des.text
				var descripe2:CommentInfo= new CommentInfo();
				descripe2.chInfo= this.des1.text
				var descripe3:CommentInfo= new CommentInfo();
				descripe3.chInfo= this.des2.text
				var descripe4:CommentInfo= new CommentInfo();
				descripe4.chInfo= this.des3.text
				productDo.descripe1=descripe1
				productDo.descripe2=descripe2
				productDo.descripe3=descripe3
				productDo.descripe4=descripe4
				
				var priceInfo:PriceInfo=new PriceInfo();
				priceInfo.price1= this.price1.text;
				productDo.price = priceInfo;
				
				productDo.imageView= this.imageView.text;
				
				var arr:Array=this.images.text.split(";");
				var imagesArr:ArrayCollection=new ArrayCollection(arr);
				productDo.images = imagesArr;
				
				service.Create(productDo);
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<mx:Button id="btnClose"  label="关闭页面" click="btnClose_clickHandler()" />
	
	<mx:HRule width="100%"/>
	<s:Group>
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		<s:Label textAlign="center" text="所属菜单: "/>
		<s:DropDownList id="chanelId" labelField="name" selectedIndex="1"/>
		<s:Label textAlign="center" text="产品名称: "/> 
		<s:TextInput id="productName" width="200"/>
		<s:Label textAlign="center" text="商品标示码: "/> 
		<s:TextInput id="productCode" width="150"/>
	</s:Group>
	<mx:HRule width="100%"/>
	
	<s:Group>
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		<s:Label textAlign="center" text="购入店铺: "/>
		<s:DropDownList id="shippingId" labelField="name" width="300"/>
		<s:Label textAlign="center" text="重量: "/> 
		<s:TextInput id="weight" width="200"/>
		<s:Label textAlign="center" text="在库？: "/> 
		<s:RadioButton groupName="myRadioButtonGroup" id="inStock1" label="是"/>
		<s:RadioButton groupName="myRadioButtonGroup" id="inStock2" label="否" selected="true"/>
	</s:Group>
	<mx:HRule width="100%"/>
	
	<s:Group>
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		<s:Label text="价格1: "/> 
		<s:TextInput id="price1" width="120"/>
		<s:Label text="价格2: "/> 
		<s:TextInput id="price2" width="120"/>
		<s:Label text="价格3: "/> 
		<s:TextInput id="price3" width="120"/>
		<s:Label text="价格4: "/> 
		<s:TextInput id="price4" width="120"/>
		<s:Label text="价格5: "/> 
		<s:TextInput id="price5" width="120"/>
	</s:Group>
	<mx:HRule width="100%"/>
	
	<s:Group>
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		<s:Label text="Menu中显示的图片: "/> 
		<s:TextInput id="imageView" width="200"/>
		<s:Label text="展示的图片（用冒号隔开）: "/> 
		<s:TextArea id="images" width="400" height="100"/>
	</s:Group>
	<mx:HRule width="100%"/>
	<s:Group>
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		
		<s:Group>
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			<s:Label text="产品简述: "/> 
			<s:TextArea id="des" width="230"/>
		</s:Group>
		
		<s:Group>
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			<s:Label text="产品描述1: "/> 
			<s:TextArea id="des1" width="230"/>
		</s:Group>
		<s:Group>
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			<s:Label text="产品描述2: "/> 
			<s:TextArea id="des2" width="230"/>
		</s:Group>
		<s:Group>
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			<s:Label text="产品描述3: "/> 
			<s:TextArea id="des3" width="230"/>
		</s:Group>
	</s:Group>
	<mx:HRule width="100%"/>
	<mx:Button id="btnCreate"  label="更新到数据库" click="btnCreate_clickHandler()" />
	<mx:Button id="btnCreate2"  label="追加到数据库" click="btnCreate2_clickHandler()" />
</s:Panel>
